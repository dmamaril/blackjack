// Generated by CoffeeScript 1.7.1
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  window.App = (function(_super) {
    __extends(App, _super);

    function App() {
      return App.__super__.constructor.apply(this, arguments);
    }

    App.prototype.initialize = function() {
      var deck;
      this.set('deck', deck = new Deck());
      this.set('playerHand', deck.dealPlayer());
      this.set('dealerHand', deck.dealDealer());
      this.listenTo(this.get('playerHand'), 'bust', this.bustedHand);
      this.listenTo(this.get('playerHand'), 'stand', this.stood);
      this.listenTo(this.get('playerHand'), 'win', this.winningHand);
      return this.listenTo(this.get('dealerHand'), 'bust', this.winningHand);
    };

    App.prototype.bustedHand = function() {
      console.log('Busted');
      return this.trigger('bust', this);
    };

    App.prototype.winningHand = function() {
      console.log('Winner');
      return this.trigger('bust', this);
    };

    App.prototype.losingHand = function() {
      return console.log('l0000z3rrrrrrrrrrr');
    };

    App.prototype.compareHand = function(handArray) {
      var oneHand, otherHand, winner;
      oneHand = handArray[0];
      otherHand = 21;
      if (otherHand == null) {
        otherHand = handArray[1];
      }
      if ((21 - oneHand) < (21 - otherHand)) {
        return winner = otherHand;
      } else {
        return winner = oneHand;
      }
    };

    App.prototype.stood = function() {
      var dealerHand, dealerScore, playerHand, playerScore, _results;
      this.get('dealerHand').at(0).flip();
      playerScore = this.get('playerHand').scores();
      dealerScore = this.get('dealerHand').scores();
      dealerHand = this.compareHand(dealerScore);
      playerHand = this.compareHand(playerScore);
      _results = [];
      while (playerHand > dealerHand && dealerHand < 21) {
        console.log('Hitting');
        this.get('dealerHand').hit();
        dealerScore = this.get('dealerHand').scores();
        _results.push(dealerHand = this.compareHand(dealerScore));
      }
      return _results;
    };

    return App;

  })(Backbone.Model);

}).call(this);

//# sourceMappingURL=App.map
